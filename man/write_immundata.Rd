% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io_immundata_write.R
\name{write_immundata}
\alias{write_immundata}
\title{Write an ImmunData Object to Disk as Parquet Files}
\usage{
write_immundata(idata, output_folder)
}
\arguments{
\item{idata}{\link{ImmunData} object containing the receptor and annotation tables.}

\item{output_folder}{Character(1). Path to the directory where the Parquet
files will be written.  If the directory does not exist, it will be
created (recursively).}
}
\value{
Invisibly returns the input \link{ImmunData}. The primary side effect is the creation of
two Parquet files in \code{output_folder}.
}
\description{
\code{write_immundata()} takes an \link{ImmunData} object and serializes its
receptor and annotation tables to two Parquet files in a specified
directory, using Zstandard compression for efficient storage and retrieval.
}
\details{
The function performs the following steps:
\enumerate{
\item Validates that \code{idata} is an \code{ImmunData} object and that
\code{output_folder} is a single non-\code{NULL} string.
\item Normalizes and creates \code{output_folder} (if needed).
\item Determines the filenames for the receptor and annotation tables
via \code{imd_files()$receptors} and \code{imd_files()$annotations}.
\item Writes \code{idata$receptors} and \code{idata$annotations} as Parquet files
to those paths, using Zstandard compression (\code{compression = "zstd"})
at level 9 for a good balance of speed and file size.
\item Emits informative CLI messages before and after writing each file.
}
}
\examples{
\dontrun{
# Suppose `idata` is an ImmunData object you constructed earlier:
outdir <- tempfile("immundata_")
write_immundata(idata, outdir)
# Now you can inspect:
list.files(outdir)
}

}
\seealso{
\code{\link[=read_repertoires]{read_repertoires()}}, \code{\link[=read_immundata]{read_immundata()}}, \link{ImmunData}
}
